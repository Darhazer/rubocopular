#!/usr/bin/env ruby

require 'bundler/setup'
require 'rubocopular'

pattern = ARGV[0]
files = ARGV[1..-1] || Dir['**/*.rb']

include RuboCop::AST::Traversal

def match pattern, node
  match = pattern.match( node)
  if match
    match == true ? node : [match, node]
  else
    unless node.children.empty?
      node.children.grep(RuboCop::AST::Node).flat_map{|e| match(pattern, e) }.compact
    end
  end
end

def line_and_code(result)
  if result.is_a?(RuboCop::AST::Node)
    range = result.source_range
    result = result.source
  else
    result, node = result
    range = node.source_range
  end
  [ range.line, " #{CodeRay.scan(result, :ruby).term}"]
end

pattern = RuboCop::NodePattern.new(pattern)

files.each do |file|
  processed_source = Rubocopular.parse_source(file)
  results = match(pattern, processed_source.ast)
  results.each do |result|
    line = [file, *line_and_code(result)]
    puts line.join(":")
  end
end
